{"ast":null,"code":"var _jsxFileName = \"/Users/niloydas/Desktop/CSE 2-1/project e-commerce/FRONTEND/src/components/UpdateInventoryImporter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UpdateInventoryImporter = props => {\n  _s();\n  const [inventoryData, setInventoryData] = useState([]);\n  const [importerid, setImporterid] = useState(props.importerid);\n  const fetchData = async () => {\n    const body = {\n      importerid\n    };\n    try {\n      const response = await fetch(\"http://localhost:3000/getUpdateInventory\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      if (response.status === 200) {\n        const data = await response.json();\n        console.log(data);\n        setInventoryData(data);\n      } else {\n        console.error(\"Failed to fetch data\");\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const handleAddStocks = async (productid, quantity) => {\n    const body = {\n      productid,\n      quantity\n    };\n    try {\n      const response = await fetch(\"http://localhost:3000/acceptUpdateInventory\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      if (response.status === 200) {\n        alert(\"Stocks added successfully\");\n        fetchData();\n      } else {\n        console.error(\"Failed to add stocks\");\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Update Inventory Importer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), inventoryData.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: inventoryData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            style: {\n              border: '1px solid #ddd',\n              borderRadius: '8px',\n              boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n              transition: 'transform 0.2s ease-in-out'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: [\"Product Name: \", item.productname]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Asked Quantity: \", item.askedproductquantity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Brand Name: \", item.brandname]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Specification: \", item.specification]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary mt-3\",\n            onClick: () => handleAddStocks(item.productid, item.askedproductquantity),\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              backgroundColor: '#007bff',\n              color: '#fff',\n              border: 'none',\n              cursor: 'pointer'\n            },\n            children: \"Add Stocks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this)]\n        }, item.updateInventoryId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdateInventoryImporter, \"AJK3tKB2Nafg9q9upgYrEpStUx8=\");\n_c = UpdateInventoryImporter;\nexport default UpdateInventoryImporter;\nvar _c;\n$RefreshReg$(_c, \"UpdateInventoryImporter\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","UpdateInventoryImporter","props","_s","inventoryData","setInventoryData","importerid","setImporterid","fetchData","body","response","fetch","method","headers","JSON","stringify","status","data","json","console","log","error","err","message","handleAddStocks","productid","quantity","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","style","border","borderRadius","boxShadow","transition","productname","askedproductquantity","brandname","specification","onClick","padding","backgroundColor","color","cursor","updateInventoryId","_c","$RefreshReg$"],"sources":["/Users/niloydas/Desktop/CSE 2-1/project e-commerce/FRONTEND/src/components/UpdateInventoryImporter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst UpdateInventoryImporter = (props) => {\n    const [inventoryData, setInventoryData] = useState([]);\n    const [importerid, setImporterid] = useState(props.importerid);\n    const fetchData = async () => {\n        const body = { importerid };\n        try {\n            const response = await fetch(\"http://localhost:3000/getUpdateInventory\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            });\n            if (response.status === 200) {\n                const data = await response.json();\n                console.log(data);\n                setInventoryData(data);\n            }\n            else {\n                console.error(\"Failed to fetch data\");\n            }\n\n        }\n        catch (err) {\n            console.error(err.message);\n        }\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const handleAddStocks = async (productid, quantity) => {\n        const body = { productid, quantity };\n        try {\n            const response = await fetch(\"http://localhost:3000/acceptUpdateInventory\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body),\n            });\n            if (response.status === 200) {\n                alert(\"Stocks added successfully\");\n                fetchData();\n            } else {\n                console.error(\"Failed to add stocks\");\n            }\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n    \n    return (\n        <div className=\"container mt-4\">\n            <h2 className=\"mb-4\">Update Inventory Importer</h2>\n            {inventoryData.length === 0 ? (\n                <p>Loading data...</p>\n            ) : (\n                <>\n                    <div className=\"row\">\n                        {inventoryData.map((item) => (\n                            <div className=\"col-md-4 mb-4\" key={item.updateInventoryId}>\n                                <div\n                                    className=\"card\"\n                                    style={{\n                                        border: '1px solid #ddd',\n                                        borderRadius: '8px',\n                                        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n                                        transition: 'transform 0.2s ease-in-out',\n                                    }}\n                                >\n                                    <div className=\"card-body\">\n                                        <h5 className=\"card-title\">Product Name: {item.productname}</h5>\n                                        <p className=\"card-text\">Asked Quantity: {item.askedproductquantity}</p>\n                                        <p className=\"card-text\">Brand Name: {item.brandname}</p>\n                                        <p className=\"card-text\">Specification: {item.specification}</p>\n                                        {/* Add more fields as needed */}\n                                    </div>\n                                </div>\n                                <button\n                                    className=\"btn btn-primary mt-3\"\n                                    onClick={() => handleAddStocks(item.productid, item.askedproductquantity)}\n                                    style={{\n                                        borderRadius: '8px',\n                                        padding: '10px',\n                                        backgroundColor: '#007bff',\n                                        color: '#fff',\n                                        border: 'none',\n                                        cursor: 'pointer',\n                                    }}\n                                >\n                                    Add Stocks\n                                </button>\n                            </div>\n\n\n                        ))}\n                    </div>\n\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default UpdateInventoryImporter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}